{"version":3,"sources":["app.ts","environment.ts","main.ts","resources/index.ts","pages/home/home.ts","/home/bmb0205/Projects/Aurelia/PhytoHealth/src/app.html","/home/bmb0205/Projects/Aurelia/PhytoHealth/src/pages/home/home.html"],"names":[],"mappings":";;;;;;;;;;;IAIA;QAEE,aAAmB,MAAc;YAAd,WAAM,GAAN,MAAM,CAAQ;QAEjC,CAAC;QAED,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACzD,MAAM,CAAC,KAAK,GAAG,aAAa,CAAC;YAC7B,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,CAAC,EAAG,QAAQ,EAAE,mBAAmB,EAAE,IAAI,EAAC,MAAM,EAAE;aAC1E,CAAC,CAAC;QACL,CAAC;QAZH;YAAC,8BAAU;;eAAA;QAaX,UAAC;IAAD,CAZA,AAYC,IAAA;IAZY,WAAG,MAYf,CAAA;;;;;IChBD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICEI,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICvBD,mBAA0B,MAA8B;IAExD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;;;ICJD;QACI,cAAmB,OAA2C;YAAlD,uBAAkD,GAAlD,mCAAkD;YAA3C,YAAO,GAAP,OAAO,CAAoC;QAAG,CAAC;QACtE,WAAC;IAAD,CAFA,AAEC,IAAA;IAFY,YAAI,OAEhB,CAAA;;;ACFD;ACAA","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from 'aurelia-router';\nimport {inject, autoinject} from 'aurelia-framework';\n\n@autoinject\nexport class App {\n\n  constructor(public router: Router) { \n\n  }\n  \n  configureRouter(config: RouterConfiguration, router: Router){\n    config.title = 'PhytoHealth';\n    config.map([\n      { route: ['', 'home', '#'],  moduleId: './pages/home/home', name:'home' }\n    ]);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export class Home {\n    constructor(public welcome: string = \"Welcome to the Homepage\") {}\n}",null,null],"sourceRoot":"../../src"}